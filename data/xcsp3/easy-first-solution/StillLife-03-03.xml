<instance format="XCSP3" type="COP">
  <variables>
    <array id="x" note="x[i][j] is 1 iff the cell at row i and col j is alive" size="[3][3]"> 0 1 </array>
    <array id="s" note="s[i][j] is the number of alive neighbours (i.e., the sum of the squares around the cell at row i and col j)" size="[3][3]"> 0..8 </array>
  </variables>
  <constraints>
    <block note="Computing sums">
      <sum>
        <list> x[0][1] x[1][0..1] </list>
        <condition> (eq,s[0][0]) </condition>
      </sum>
      <sum>
        <list> x[0][0] x[0][2] x[1][] </list>
        <condition> (eq,s[0][1]) </condition>
      </sum>
      <sum>
        <list> x[0..1][1] x[1][2] </list>
        <condition> (eq,s[0][2]) </condition>
      </sum>
      <sum>
        <list> x[][1] x[0][0] x[2][0] </list>
        <condition> (eq,s[1][0]) </condition>
      </sum>
      <sum>
        <list> x[][0] x[][2] x[0][1] x[2][1] </list>
        <condition> (eq,s[1][1]) </condition>
      </sum>
      <sum>
        <list> x[][1] x[0][2] x[2][2] </list>
        <condition> (eq,s[1][2]) </condition>
      </sum>
      <sum>
        <list> x[1][0..1] x[2][1] </list>
        <condition> (eq,s[2][0]) </condition>
      </sum>
      <sum>
        <list> x[1][] x[2][0] x[2][2] </list>
        <condition> (eq,s[2][1]) </condition>
      </sum>
      <sum>
        <list> x[1][1..2] x[2][1] </list>
        <condition> (eq,s[2][2]) </condition>
      </sum>
    </block>
    <group note="Imposing rules">
      <extension>
        <list> %0 %1 </list>
        <supports> (0,0)(1,0)(2,0)(2,1)(3,1)(4,0)(5,0)(6,0)(7,0)(8,0) </supports>
      </extension>
      <args> s[0][0] x[0][0] </args>
      <args> s[0][1] x[0][1] </args>
      <args> s[0][2] x[0][2] </args>
      <args> s[1][0] x[1][0] </args>
      <args> s[1][1] x[1][1] </args>
      <args> s[1][2] x[1][2] </args>
      <args> s[2][0] x[2][0] </args>
      <args> s[2][1] x[2][1] </args>
      <args> s[2][2] x[2][2] </args>
    </group>
    <block note="Imposing rules for ensuring valid dead cells around the board">
      <group>
        <extension>
          <list> %0 %1 %2 </list>
          <conflicts> (1,1,1) </conflicts>
        </extension>
        <args> x[0][] </args>
        <args> x[2][] </args>
        <args> x[][0] </args>
        <args> x[][2] </args>
      </group>
    </block>
    <block class="symmetryBreaking">
      <group>
        <intension> ge(%0,%1) </intension>
        <args> x[0][0] x[2][2] </args>
        <args> x[0][2] x[2][0] </args>
      </group>
    </block>
  </constraints>
  <objectives>
    <maximize type="sum"> x[][] </maximize>
  </objectives>
</instance>
